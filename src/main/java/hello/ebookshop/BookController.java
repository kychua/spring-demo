package hello.ebookshop;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class BookController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private BookRepository bookRepository;

//	@GetMapping(path="/findBooks") // Map ONLY GET Requests
//	public @ResponseBody String addNewUser (@RequestParam String author) {
//		// @ResponseBody means the returned String is the response, not a view name
//		// @RequestParam means it is a parameter from the GET or POST request
//
//		User n = new User();
//		n.setName(name);
//		n.setEmail(email);
//		userRepository.save(n);
//		return "Saved";
//	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Book> getAllBooks() {
		// This returns a JSON or XML with the users
		return bookRepository.findAll();
	}

	@GetMapping(path="/queryauthor")
	public @ResponseBody Iterable<Book> getAvailableBooksByAuthor(@RequestParam String author) {
		return bookRepository.findByAuthorAndQtyGreaterThan(author, 0);
	}


	@GetMapping(path="/sayhi")
	public String sayHi(@RequestParam(value="name", defaultValue="World") String name, Model model) {
		model.addAttribute("name", name); // else we get null instead of World when no name is supplied
		return "say-hi";
	}

}